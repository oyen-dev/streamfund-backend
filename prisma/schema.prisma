// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AnalyticType {
  DAILY
  WEEKLY
  MONTHLY
}

model Bio {
  id         String   @id @default(cuid())
  username   String   @unique
  bio        String?
  image      String?
  x          String?
  tiktok     String?
  instagram  String?
  youtube    String?
  website    String?
  streamer   Streamer @relation(fields: [streamerId], references: [id])
  streamerId String   @unique
  viewer     Viewer   @relation(fields: [viewerId], references: [id])
  viewerId   String   @unique

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Configuration {
  id         String   @id @default(cuid())
  alert      Json?
  mediashare Json?
  qr_code    Json?
  marquee    Json?
  subhaton   Json?
  voting     Json?
  milestone  Json?
  live_ads   Json?
  streamer   Streamer @relation(fields: [streamerId], references: [id])
  streamerId String   @unique

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Token {
  id                     String                   @id @default(cuid())
  address                String
  chain                  Int
  decimal                Int
  name                   String
  symbol                 String
  image                  String?
  coin_gecko_id          String?
  Support                Support[]
  AnalyticsMostUsedToken AnalyticsMostUsedToken[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Viewer {
  id                      String                    @id @default(cuid())
  address                 String
  usd_total_support       Float
  bio                     Bio?
  Support                 Support[]
  TopSupport              TopSupport[]
  TopSupporter            TopSupporter[]
  AnalyticsGenerousViewer AnalyticsGenerousViewer[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Streamer {
  id                       String                     @id @default(cuid())
  address                  String                     @unique
  stream_key               String?
  usd_total_support        Float
  configuration            Configuration?
  bio                      Bio?
  Support                  Support[]
  TopSupport               TopSupport[]
  TopSupporter             TopSupporter[]
  AnalyticsStreamerRevenue AnalyticsStreamerRevenue[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Support {
  id         String   @id @default(cuid())
  hash       String
  usd_amount Float
  data       Json
  token      Token    @relation(fields: [tokenId], references: [id])
  tokenId    String
  from       Viewer   @relation(fields: [fromId], references: [id])
  fromId     String
  to         Streamer @relation(fields: [toId], references: [id])
  toId       String
  revenue    Revenue? @relation(fields: [revenueId], references: [id])
  revenueId  String?

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model TopSupport {
  id         String   @id @default(cuid())
  value      Float
  count      Int
  streamer   Streamer @relation(fields: [streamerId], references: [id])
  streamerId String
  viewer     Viewer   @relation(fields: [viewerId], references: [id])
  viewerId   String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model TopSupporter {
  id         String   @id @default(cuid())
  value      Float
  count      Int
  streamer   Streamer @relation(fields: [streamerId], references: [id])
  streamerId String
  viewer     Viewer   @relation(fields: [viewerId], references: [id])
  viewerId   String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Revenue {
  id           String    @id @default(cuid())
  address      String
  chain        Int
  usd_total    Float
  transactions Support[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model AnalyticsStreamerRevenue {
  id         String       @id @default(cuid())
  type       AnalyticType
  usd_amount Float
  streamer   Streamer     @relation(fields: [streamerId], references: [id])
  streamerId String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model AnalyticsGenerousViewer {
  id         String       @id @default(cuid())
  type       AnalyticType
  usd_amount Float
  viewer     Viewer       @relation(fields: [viewerId], references: [id])
  viewerId   String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model AnalyticsMostUsedToken {
  id          String       @id @default(cuid())
  type        AnalyticType
  used_count  Int
  used_amount Float
  token       Token        @relation(fields: [tokenId], references: [id])
  tokenId     String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}
